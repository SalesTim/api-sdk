/*
 * SalesTim API
 * The Microsoft Teams Governance API\n
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@salestim.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASPluginsApi {
    OASClient client;

    public OASPluginsApi(OASClient client) {
        this.client = client;
    }

    public OASPluginsApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Create a new plugin
     * Create a new plugin and get its generated ID and secret.
     * @param oaSInlineObject1  (required)
     * @return OASPlugin
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPlugin createPlugin(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSInlineObject1'), 'oaSInlineObject1');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPlugin) client.invoke(
            'POST', '/plugins',
            (OASInlineObject1) params.get('oaSInlineObject1'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            OASPlugin.class
        );
    }
    /**
     * Delete a plugin
     * Delete a plugin
     * @param id ID of the plugin to delete (required)
     * @throws OAS.ApiException if fails to make API call
     */
    public void deletePlugin(Map<String, Object> params) {
        client.assertNotNull(params.get('id'), 'id');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'DELETE', '/plugins/{id}', '',
            query, form,
            new Map<String, Object>{
                'id' => (String) params.get('id')
            },
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String> { 'bearerAuth' },
            null
        );
    }
    /**
     * Get all plugins in a tenant
     * Get all plugins in a tenant
     * @return List<OASPlugin>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASPlugin> getPlugIns() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASPlugin>) client.invoke(
            'GET', '/plugins', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'bearerAuth' },
            List<OASPlugin>.class
        );
    }
    /**
     * Regenerate a plugin secret
     * Regenerate a plugin secret
     * @param id The plugin ID (required)
     * @return OASPlugin
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPlugin regeneratePluginSecret(Map<String, Object> params) {
        client.assertNotNull(params.get('id'), 'id');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPlugin) client.invoke(
            'POST', '/plugins/{id}/regenerateSecret', '',
            query, form,
            new Map<String, Object>{
                'id' => (String) params.get('id')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'bearerAuth' },
            OASPlugin.class
        );
    }
    /**
     * Update a plugin
     * Update a plugin
     * @param id ID of the plugin to update (required)
     * @param oaSInlineObject2  (required)
     * @return OASPlugin
     * @throws OAS.ApiException if fails to make API call
     */
    public OASPlugin updatePlugin(Map<String, Object> params) {
        client.assertNotNull(params.get('id'), 'id');
        client.assertNotNull(params.get('oaSInlineObject2'), 'oaSInlineObject2');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASPlugin) client.invoke(
            'PUT', '/plugins/{id}',
            (OASInlineObject2) params.get('oaSInlineObject2'),
            query, form,
            new Map<String, Object>{
                'id' => (String) params.get('id')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'bearerAuth' },
            OASPlugin.class
        );
    }
}
