/* 
 * SalesTim API
 *
 * The Microsoft Teams Governance API 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@salestim.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing StoreApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class StoreApiTests : IDisposable
    {
        private StoreApi instance;

        public StoreApiTests()
        {
            instance = new StoreApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of StoreApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' StoreApi
            //Assert.IsType(typeof(StoreApi), instance, "instance is a StoreApi");
        }

        
        /// <summary>
        /// Test GetStoreCategories
        /// </summary>
        [Fact]
        public void GetStoreCategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetStoreCategories();
            //Assert.IsType<List<StoreCategory>> (response, "response is List<StoreCategory>");
        }
        
        /// <summary>
        /// Test GetStoreTemplate
        /// </summary>
        [Fact]
        public void GetStoreTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetStoreTemplate(id);
            //Assert.IsType<StoreTemplate> (response, "response is StoreTemplate");
        }
        
        /// <summary>
        /// Test GetStoreTemplates
        /// </summary>
        [Fact]
        public void GetStoreTemplatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetStoreTemplates();
            //Assert.IsType<List<StoreTemplate>> (response, "response is List<StoreTemplate>");
        }
        
        /// <summary>
        /// Test GetStoreTemplatesByCategory
        /// </summary>
        [Fact]
        public void GetStoreTemplatesByCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetStoreTemplatesByCategory(id);
            //Assert.IsType<List<StoreTemplate>> (response, "response is List<StoreTemplate>");
        }
        
    }

}
