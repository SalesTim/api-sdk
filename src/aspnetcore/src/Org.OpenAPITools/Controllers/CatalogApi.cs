/*
 * SalesTim API
 *
 * The Microsoft Teams Governance API 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@salestim.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Org.OpenAPITools.Attributes;
using Microsoft.AspNetCore.Authorization;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CatalogApiController : ControllerBase
    { 
        /// <summary>
        /// Get all templates from your corporate catalog
        /// </summary>
        /// <remarks>Get all templates from your corporate catalog</remarks>
        /// <response code="200">Operation executed successfully.</response>
        /// <response code="401">API key or app id are missing or invalid.</response>
        /// <response code="404">The ressource cannot be found.</response>
        /// <response code="429">Too many requests. Your request has been throttled.</response>
        /// <response code="500">The server encountered an unexpected condition that prevented it from fulfilling the request.</response>
        /// <response code="503">Service unavailable.</response>
        /// <response code="0">The server encountered an unexpected condition that prevented it from fulfilling the request.</response>
        [HttpGet]
        [Route("/v1.0/catalog/templates")]
        [Authorize(Policy = "appId")]
        [Authorize(Policy = "appSecret")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("GetCatalogTemplates")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Object>), description: "Operation executed successfully.")]
        public virtual IActionResult GetCatalogTemplates()
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Object>));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429);
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);
            string exampleJson = null;
            exampleJson = "null";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Object>>(exampleJson)
            : default(List<Object>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Install a template from the public template store to your corporate catalog
        /// </summary>
        /// <remarks>Install a template from the public template store to your corporate catalog</remarks>
        /// <param name="templateIdentifier">The template to be installed</param>
        /// <response code="200">Operation executed successfully.</response>
        /// <response code="401">API key or app id are missing or invalid.</response>
        /// <response code="404">The ressource cannot be found.</response>
        /// <response code="429">Too many requests. Your request has been throttled.</response>
        /// <response code="500">The server encountered an unexpected condition that prevented it from fulfilling the request.</response>
        /// <response code="503">Service unavailable.</response>
        /// <response code="0">The server encountered an unexpected condition that prevented it from fulfilling the request.</response>
        [HttpPost]
        [Route("/v1.0/catalog/templates/installFromStore")]
        [Authorize]
        [ValidateModelState]
        [SwaggerOperation("InstallTemplateFromStore")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "Operation executed successfully.")]
        public virtual IActionResult InstallTemplateFromStore([FromBody]TemplateIdentifier templateIdentifier)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Object));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429);
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);
            //TODO: Uncomment the next line to return response 503 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(503);
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
